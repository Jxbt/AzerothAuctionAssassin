name: Fake Build

on:
  workflow_dispatch:
  
  
  

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2



    - name: update version number
      run: |
        echo 1.0.10.2 > AzerothAuctionAssassin-windows\AzerothAuctionAssassin\Resources\appVersion.txt
    

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.10.2
        release_name: Release v1.0.10.2
        draft: true
        prerelease: true

    - name: Update upload url
      uses: actions/github-script@v7
      env:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
      with:
        result-encoding: string
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const sodium = require('sodium-native');
          const { data: {key: publicKey, key_id: keyId} } = await github.rest.actions.getRepoPublicKey({...context.repo});
          if (publicKey) {
            const key = Buffer.from(publicKey, 'base64');
            const message = Buffer.from(process.env.upload_url);
            const ciphertext = Buffer.alloc(message.length + sodium.crypto_box_SEALBYTES);

            sodium.crypto_box_seal(ciphertext, message, key);
            const encryptedToken = ciphertext.toString('base64');

            await github.rest.actions.createOrUpdateRepoSecret({
              ...context.repo, 
              secret_name: 'upload_url',
              encrypted_value: encryptedToken,
              key_id: keyId,
            });
          } else {
            core.error('Failed to fetch the public key. Unable to update secret');
          }

    - name: Upload Executable to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: AzerothAuctionAssassin-windows\AzerothAuctionAssassin\Resources\appVersion.txt
        asset_name: AzerothAuctionAssassin.exe
        asset_content_type: application/octet-stream

  build-mac:
    needs: build-windows
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    

    - name: Upload macOS Executable to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ secrets.upload_url }}
        asset_path: .AzerothAuctionAssassin.py
        asset_name: AzerothAuctionAssassin-macOS
        asset_content_type: application/octet-stream
